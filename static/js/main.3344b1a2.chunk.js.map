{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Display","props","Row","className","Col","small","sequence","id","display","Operator","isMediumScreen","operation","onClick","Number","value","App","useState","numberDisplay","setNumberDisplay","sequenceDisplay","setSequenceDisplay","setOperation","factor","setFactor","nextFactor","setNextFactor","positive","setPositive","useMediaQuery","query","isPortrait","solve","result","handleNumber","event","numberDisplayString","sequenceDisplayString","numberValue","currentTarget","getAttribute","console","log","includes","negativeNumber","parseFloat","toString","handleOperator","operator","sequenceArr","split","splice","join","useEffect","length","shortened","substring","Container","fluid","xs","md","Math","sqrt","href","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3344b1a2.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './App.css';\n\nfunction Display(props) {\n  return (\n    <Row  className=\"rounded shadow key display\">\n      <Col>\n        <p small>{props.sequence}</p>\n        <h1 id=\"display\" >{props.display}</h1>\n      </Col>\n    </Row>\n  );\n}\n\nfunction Operator(props) {\n  return (\n    <Row>\n    <Col className={\"key operator rounded shadow \" + (props.isMediumScreen ? \"right\" : \"centered\")} id={props.id} operation={props.operation} onClick={props.onClick} >\n      <h4>\n    {props.display}\n      </h4>\n    </Col>\n      </Row>\n  );\n}\n\nfunction Number(props) {\n  return (\n    <Row>\n    <Col className={\"key number rounded shadow \" + (props.isMediumScreen ? \"right\" : \"centered\")} id={props.id} value={props.value} onClick={props.onClick}>\n      <h4>\n      {props.value}\n      </h4>\n        </Col>\n      </Row>\n  );\n}\n\nfunction App(props) {\n  const [numberDisplay, setNumberDisplay] = useState(\"0\");\n  const [sequenceDisplay, setSequenceDisplay] = useState(\"\");\n  const [operation, setOperation] = useState(null);\n  const [factor, setFactor] = useState(null);\n  const [nextFactor, setNextFactor] = useState(null);\n  const [positive, setPositive] = useState(true);\n  const isMediumScreen = useMediaQuery({query: '(min-width: 768px)'});\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  \n  function solve() {\n    let result;\n    // eslint-disable-next-line\n      switch(operation) {\n        case \"+\":\n          result = factor + nextFactor;\n          break;\n        case \"-\":\n          result = factor - nextFactor;\n          break;\n        case \"*\":\n          result = factor * nextFactor;\n          break;\n        case \"/\":\n          result = factor/nextFactor;\n          break;\n      }\n    return result;\n  }\n  \n  function handleNumber(event) {\n    let numberDisplayString = numberDisplay;\n    let sequenceDisplayString = sequenceDisplay;\n    let numberValue = event.currentTarget.getAttribute(\"value\");\n    console.log(`numberValue: `,numberValue);\n    \n    if (sequenceDisplay.includes(\"=\")) {\n      setNumberDisplay(numberDisplay + numberValue);\n      setSequenceDisplay(sequenceDisplay + numberValue);\n      console.log(`numberDisplayString : `, numberDisplayString);\n      console.log(`numberDisplay: `, numberDisplay);\n    }\n    \n    if (numberDisplayString.includes(\".\") && numberValue === \".\") {\n      console.log(typeof numberDisplayString);\n      console.log(`numberDisplayString : `, numberDisplayString);\n      console.log(`numberDisplay: `, numberDisplay);\n      return;\n    }\n    \n    if (!operation) {\n      if (numberDisplay === \"0\") {\n        setNumberDisplay(numberValue);\n        setSequenceDisplay(numberValue);\n        console.log(`numberDisplayString : `, numberDisplayString);\n        console.log(`sequenceDisplayString: `, sequenceDisplayString);\n      } else {\n        numberDisplayString += numberValue;\n        sequenceDisplayString += numberValue;\n        setNumberDisplay(numberDisplayString);\n        setSequenceDisplay(sequenceDisplayString);\n        console.log(`numberDisplayString : `, numberDisplayString);\n        console.log(`sequenceDisplayString: `, sequenceDisplayString);\n      }\n    }\n    \n    if (operation && !nextFactor && !positive) {\n      numberValue = parseFloat(numberValue);\n      let negativeNumber = 0 - numberValue;\n      setNextFactor(negativeNumber);\n      negativeNumber = negativeNumber.toString();\n      setNumberDisplay(negativeNumber);\n      sequenceDisplayString += negativeNumber;\n      setSequenceDisplay(sequenceDisplayString);\n      setPositive(true);\n    } \n    \n    if (operation && !nextFactor && positive) {\n      setNumberDisplay(numberValue);\n      sequenceDisplayString += numberValue;\n      setSequenceDisplay(sequenceDisplayString);\n      setNextFactor(parseFloat(numberValue));\n    }\n    \n    if (operation && nextFactor) {\n      sequenceDisplayString += numberValue;\n      setSequenceDisplay(sequenceDisplayString);\n      numberDisplayString += numberValue;\n      setNumberDisplay(numberDisplayString);\n      setNextFactor(parseFloat(numberDisplayString));\n    }\n }\n  \n  function handleOperator(event) {\n    let sequenceDisplayString = sequenceDisplay;\n    let operator = event.currentTarget.getAttribute(\"operation\");\n    \n    if (operation && nextFactor) {\n      let result = solve();\n      setNumberDisplay(result.toString());\n      setFactor(result);\n      setNextFactor(null);\n      setOperation(operator);\n      sequenceDisplayString += result;\n      sequenceDisplayString += operator;\n      setSequenceDisplay(sequenceDisplayString);\n    }\n    \n    if (operation && !nextFactor && operation===\"-\" &&operator===\"-\" ) {\n      return;\n    }\n    \n    if (operation && !nextFactor && operator!==\"-\") {\n      if (!positive) {\n        setPositive(true);\n      }\n      \n      let sequenceArr = sequenceDisplayString.split(\"\");\n      console.log(`sequenceArr: `, sequenceArr);\n      sequenceArr.splice(-1, 1, operator);\n      console.log(`sequenceArr: `, sequenceArr);\n      sequenceDisplayString = sequenceArr.join(\"\");\n      setSequenceDisplay(sequenceDisplayString);\n      console.log(`sequenceDisplayString: `, sequenceDisplayString);\n      setOperation(operator);\n    }\n    \n    if(operation && !nextFactor && operator ===\"-\") {\n      positive ? setPositive(false) : setPositive(true)\n    }\n    \n    if (!operation) {\n      setFactor(parseFloat(numberDisplay));\n      sequenceDisplayString += operator;\n      setSequenceDisplay(sequenceDisplayString);\n      setOperation(operator);\n    }\n  }\n  \n  function handleEquals() {\n    let sequenceDisplayString = sequenceDisplay;\n    if (!operation) {\n      return;\n    }\n    if (operation && !nextFactor) {\n      return;\n    }\n    if (operation && nextFactor) {\n      let result = solve();\n      setNumberDisplay(result.toString());\n      sequenceDisplayString += \"=\";\n      sequenceDisplayString += result;\n      setSequenceDisplay(sequenceDisplayString);\n      setFactor(result);\n      setNextFactor(null);\n      setOperation(null);\n    }\n  }\n  \n  function clear() {\n   setNumberDisplay(\"0\");\n   setFactor(null);\n   setOperation(null);\n   setSequenceDisplay(\"\");\n   setPositive(true);\n }\n \n  function multiplicativeInverse() {\n    if (numberDisplay !== 0) {\n      let result = 1/numberDisplay;\n      setNumberDisplay(result.toString());\n      setSequenceDisplay(result.toString());\n      setFactor(null);\n      setNextFactor(null);\n      setOperation(null);\n    } else {\n      return;\n    }\n  }\n\n  function squareRoot() {\n    let result = Math.sqrt(numberDisplay);\n    setNumberDisplay(result.toString());\n    setSequenceDisplay(result.toString());\n    setFactor(null);\n    setNextFactor(null);\n    setOperation(null);\n  }\n\n  useEffect(() => {\n    if (sequenceDisplay.length >= 24) {\n      let shortened = sequenceDisplay.substring(4);\n      setSequenceDisplay(shortened);\n    }\n  }, [sequenceDisplay]);\n\n  return (\n  <Container fluid className={isPortrait ? \"portrait\" : \"\"} >\n    <Row>\n      <Col xs={12} md={8}>\n      <Container className=\"calculator rounded shadow\">\n        <Display display={numberDisplay} sequence={sequenceDisplay} />\n        <Row>\n            <Col xs={3}>\n            <Operator id=\"clear\" operation=\"clear\" display={(isMediumScreen ? \"Clear\" : \"C\")} onClick={clear} isMediumScreen={isMediumScreen} />\n            </Col>\n            <Col xs={3}>\n              <Operator id=\"1/x\"  operation=\"1/x\" display=\"1/x\" onClick={multiplicativeInverse} isMediumScreen={isMediumScreen} />\n            </Col>\n            <Col xs={3}>\n              <Operator id=\"sqrt\" operation=\"squareroot\" display=\"&#x221A;\" onClick={squareRoot} isMediumScreen={isMediumScreen} />\n            </Col>\n            <Col xs={3}>\n              <Operator id=\"divide\" operation=\"/\" display=\"&divide;\" onClick={handleOperator} isMediumScreen={isMediumScreen} />\n            </Col>\n        </Row>\n        <Row>\n          <Col xs={3}>\n            <Number id=\"seven\" value=\"7\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"eight\" value=\"8\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"nine\" value=\"9\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Operator id=\"multiply\" operation=\"*\" display=\"&times;\" onClick={handleOperator}isMediumScreen={isMediumScreen} />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={3}>\n            <Number id=\"four\" value=\"4\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"five\" value=\"5\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"six\" value=\"6\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Operator id=\"subtract\" operation=\"-\" display=\"&minus;\" onClick={handleOperator} isMediumScreen={isMediumScreen} />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={3}>\n            <Number id=\"one\" value=\"1\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"two\" value=\"2\" onClick={handleNumber} isMediumScreen={isMediumScreen}  />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"three\" value=\"3\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Operator id=\"add\" operation=\"+\" display=\"+\" onClick={handleOperator} isMediumScreen={isMediumScreen} />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6}>\n            <Number id=\"zero\" value=\"0\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Number id=\"decimal\" value=\".\" onClick={handleNumber} isMediumScreen={isMediumScreen} />\n          </Col>\n          <Col xs={3}>\n            <Operator id=\"equals\" operation=\"=\" display=\"=\" onClick={handleEquals} isMediumScreen={isMediumScreen} />\n          </Col>\n        </Row>\n      </Container>\n      </Col>\n      </Row>\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/dinosoftlabs\" title=\"DinosoftLabs\">DinosoftLabs</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}